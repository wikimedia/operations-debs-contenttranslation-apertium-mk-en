<?xml version="1.0" encoding="utf-8"?>
<transfer default="chunk">
  <section-def-cats>
    <def-cat n="sam-od-sebe">
      <cat-item lemma="сам# од себе" tags="adj.*"/>
    </def-cat>

    <def-cat n="unknown">
      <cat-item lemma="*" tags=""/>
    </def-cat>
    <def-cat n="i">
      <cat-item lemma="и" tags="cnjcoo"/>
      <cat-item lemma="и" tags="cnjcoo.*"/>
    </def-cat>
    <def-cat n="interj">
      <cat-item tags="ij"/>
      <cat-item tags="ij.*"/>
    </def-cat>
    <def-cat n="sent">
      <cat-item tags="sent"/>
      <cat-item tags="sent.*"/>
    </def-cat>
    <def-cat n="guio">
      <cat-item tags="guio"/>
      <cat-item tags="guio.*"/>
    </def-cat>
    <def-cat n="cog">
      <cat-item tags="np.cog.*"/>
    </def-cat>
    <def-cat n="ant">
      <cat-item tags="np.ant.*"/>
    </def-cat>
    <def-cat n="top">
      <cat-item tags="np.top.*"/>
    </def-cat>
	<def-cat n="org">
      <cat-item tags="np.org.*"/>
    </def-cat>
    <def-cat n="nom">
      <cat-item tags="n.*"/>
    </def-cat>
	<def-cat n="pnom">
      <cat-item tags="np.*"/>
    </def-cat>
	
	<def-cat n="abbr">
	  <cat-item tags="abbr"/>
    </def-cat>

    <def-cat n="num">
      <cat-item tags="num"/>
      <cat-item tags="num.*"/>
    </def-cat>
    <def-cat n="adv">
      <cat-item tags="adv"/>
      <cat-item tags="adv.*"/>
    </def-cat>
    <def-cat n="hyp">
      <cat-item lemma="би" tags="vbser.*"/>
    </def-cat>
    <def-cat n="može">
      <cat-item lemma="може" tags="vbmod.*"/>
    </def-cat>
    <def-cat n="mora">
      <cat-item lemma="мора" tags="vbmod.*"/>
    </def-cat>
    <def-cat n="treba">
      <cat-item lemma="треба" tags="vbmod.*"/>
    </def-cat>
    <def-cat n="poradi_što">
      <cat-item lemma="поради што" tags="*"/>
    </def-cat>
    <def-cat n="ne">
      <cat-item lemma="не" tags="adv"/>
    </def-cat>
    <def-cat n="vbhaver_fin_neg">
      <cat-item lemma="нема" tags="vbhaver.pres.*"/>
      <cat-item lemma="нема" tags="vbhaver.pii.*"/>
      <cat-item lemma="нема" tags="vbhaver.aor.*"/>
      <cat-item lemma="нема" tags="vbhaver.lp.*"/>
    </def-cat>
    <def-cat n="imprt">
      <cat-item tags="vblex.*.*.imp.*"/>
      <cat-item tags="vblex.*.*.imp.*"/>
      <cat-item tags="vbhaver.imp.*"/>
      <cat-item tags="vbhaver.imp.*"/>
      <cat-item tags="vbser.imp.*"/>
      <cat-item tags="vbser.imp.*"/>
    </def-cat>

    <def-cat n="v_lp_aor">
      <cat-item tags="vblex.*.*.lp.aor.*"/>
      <cat-item tags="vblex.*.*.lp.pii.*"/>
    </def-cat>

    <def-cat n="v_perf_lp_aor">
      <cat-item tags="vblex.perf.*.lp.aor.*"/>
      <cat-item tags="vblex.perf.*.lp.pii.*"/>
    </def-cat>

    <def-cat n="v_imperf_lp_aor">
      <cat-item tags="vblex.imperf.*.lp.aor.*"/>
      <cat-item tags="vblex.imperf.*.lp.pii.*"/>
    </def-cat>

    <def-cat n="v_perf_aor">
      <cat-item tags="vblex.perf.*.aor.*"/>
    </def-cat>

    <def-cat n="v_imperf_aor">
      <cat-item tags="vblex.imperf.*.aor.*"/>
    </def-cat>
		

    <def-cat n="v_fin">
      <cat-item tags="vblex.*.*.pres.*"/>
      <cat-item tags="vblex.*.*.pii.*"/>
      <cat-item tags="vblex.*.*.aor.*"/>
      <cat-item tags="vbhaver.pres.*"/>
      <cat-item tags="vbhaver.pii.*"/>
      <cat-item tags="vbhaver.aor.*"/>
    </def-cat>

	<def-cat n="v_perf_fin">
      <cat-item tags="vblex.perf.*.pres.*"/>
      <cat-item tags="vblex.perf.*.pii.*"/>
      <cat-item tags="vblex.perf.*.aor.*"/>
      <cat-item tags="vbhaver.pres.*"/>
      <cat-item tags="vbhaver.pii.*"/>
      <cat-item tags="vbhaver.aor.*"/>
    </def-cat>	

	<def-cat n="v_imperf_fin">
      <cat-item tags="vblex.imperf.*.pres.*"/>
      <cat-item tags="vblex.imperf.*.pii.*"/>
      <cat-item tags="vblex.imperf.*.aor.*"/>
    </def-cat>

    <def-cat n="v_pres_p3_sg">
      <cat-item tags="vblex.*.*.pres.p3.sg"/>
      <cat-item tags="vbhaver.pres.p3.sg"/>
      <cat-item tags="vblex.*.*.pres.p3.sg.*"/>
      <cat-item tags="vbhaver.pres.p3.sg.*"/>
    </def-cat>

    <def-cat n="v_pres">
      <cat-item tags="vblex.*.*.pres.*"/>
      <cat-item tags="vbhaver.pres"/>
      <cat-item tags="vbhaver.pres.*"/>
    </def-cat>


    <def-cat n="v_pres_or_ser">
      <cat-item tags="vblex.*.*.pres.*"/>
      <cat-item tags="vbhaver.pres"/>
      <cat-item tags="vbhaver.pres.*"/>
      <cat-item tags="vbser.*"/>
    </def-cat>


	<def-cat n="v_pp">
      <cat-item tags="vblex.*.*.pp.*"/>
    </def-cat>

	<def-cat n="v_perf_pp">
      <cat-item tags="vblex.perf.*.pp.*"/>
    </def-cat>

	<def-cat n="v_imperf_pp">
      <cat-item tags="vblex.imperf.*.pp.*"/>
    </def-cat>

	<def-cat n="v_imperf">
      <cat-item tags="vblex.imperf.*"/>
    </def-cat>

    <def-cat n="vbmod">
      <cat-item tags="vbmod.*"/>
    </def-cat>

    <def-cat n="vbser">
      <cat-item tags="vbser.*"/>
    </def-cat>


    <def-cat n="vbser_pres">
      <cat-item tags="vbser.pres.*"/>
    </def-cat>

    <def-cat n="vbser_past">
      <cat-item tags="vbser.past.*"/>
	  <cat-item tags="vbser.pii.*"/>
    </def-cat>

 	<def-cat n="vbhaver">
      <cat-item tags="vbhaver.*"/>
    </def-cat>	

 	<def-cat n="vbhaver_pres">
      <cat-item tags="vbhaver.pres.*"/>
    </def-cat>

 	<def-cat n="vbhaver_past">
      <cat-item tags="vbhaver.past.*"/>
    </def-cat>

    <def-cat n="v_cop_fin_pres">
      <cat-item tags="vbser.pres.*"/>
    </def-cat>

    <def-cat n="v_cop_inf">
      <cat-item tags="vbser.inf"/>
    </def-cat>

    <def-cat n="v_cop_fin">
      <cat-item tags="vbser.pres.*"/>
      <cat-item tags="vbser.pii.*"/>
      <cat-item tags="vbser.aor.*"/>
    </def-cat>
    <def-cat n="pprs_adv"> 
      <cat-item tags="vblex.*.*.pprs.adv"/>
      <cat-item tags="vblex.*.*.pprs.adv.*"/>
      <cat-item tags="vbhaver.pprs.adv"/>
      <cat-item tags="vbhaver.pprs.adv.*"/>
      <cat-item tags="vbser.pprs.adv"/>
      <cat-item tags="vbser.pprs.adv.*"/>
    </def-cat>
    <def-cat n="pp">
      <cat-item tags="vblex.*.pp.*"/>
    </def-cat>
    <def-cat n="pref">
      <cat-item tags="pref.*"/>
    </def-cat>
    <def-cat n="adj">
      <cat-item tags="adj"/>
      <cat-item tags="adj.*"/>
    </def-cat>

    <def-cat n="det_pos">
      <cat-item tags="det.pos.*"/>
    </def-cat>

    <def-cat n="prn_ref_clt">
      <cat-item tags="prn.ref.clt.*"/>
    </def-cat>
	
    <def-cat n="prn_ref_pers">
      <cat-item tags="prn.ref.pers.*"/>
    </def-cat>

	<def-cat n="prn_pos_clt">
      <cat-item tags="prn.pos.clt.*"/>
    </def-cat>

	<def-cat n="prn_pers_clt">
      <cat-item tags="prn.pers.clt.*"/>
    </def-cat>

	<def-cat n="prn_clt">
      <cat-item tags="prn.*.clt.*"/>
    </def-cat>

    <def-cat n="prn_ref_pos">
      <cat-item tags="prn.ref.pos.*"/>
    </def-cat>
    <def-cat n="prn_rel">
      <cat-item tags="prn.rel.*"/>
    </def-cat>
    <def-cat n="prn_clitic">
      <cat-item lemma="clitic" tags="prn.*"/>
      <cat-item lemma="clitic" tags="prn.pos.clt.*"/>
    </def-cat>

    <def-cat n="prn">
      <cat-item tags="prn.itg.*"/>
      <cat-item tags="prn.neg.*"/>
      <cat-item tags="prn.ind.*"/>
      <cat-item tags="prn.tot.*"/>
      <cat-item tags="prn.pos.*"/>
      <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="prn_dem">
      <cat-item tags="prn.dem.*"/>
    </def-cat>
    <def-cat n="prn_pers">
      <cat-item tags="prn.pers.*"/>
    </def-cat>
    <def-cat n="inf">
      <cat-item lemma="да" tags="part"/>
      <cat-item lemma="да" tags="part.*"/>
    </def-cat>

    <def-cat n="exp">
      <cat-item lemma="ќе" tags="part.*"/>
    </def-cat>
    
	<def-cat n="at_age_of">
      <cat-item lemma="на возраст од" tags="adv"/>
      <cat-item lemma="на возраст од" tags="adv.*"/>
    </def-cat>
	
	<def-cat n="year">
      <cat-item lemma="година" tags="n.*"/>
    </def-cat>

	<def-cat n="vblex">
      <cat-item tags="vblex.*"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
	<def-attr n="a_det">
      <attr-item tags="det"/>
    </def-attr>

    <def-attr n="a_abbr">
      <attr-item tags="abbr"/>
    </def-attr>

    <def-attr n="a_verb">
      <attr-item tags="vblex"/>
      <attr-item tags="vbser"/>
      <attr-item tags="vbhaver"/>
      <attr-item tags="vbmod"/>
      <attr-item tags="vaux"/>
    </def-attr>
    <def-attr n="a_adv">
      <attr-item tags="preadv"/>
      <attr-item tags="cnjadv"/>
      <attr-item tags="adv"/>
      <attr-item tags="adv.itg"/>
    </def-attr>
    <def-attr n="a_adj">
      <attr-item tags="adj"/>
      <attr-item tags="adj.ord"/>
      <attr-item tags="adj.sint"/>

      <!-- Temporary -->
      <attr-item tags="det.qnt"/>
    </def-attr>
    <def-attr n="a_prn">
      <attr-item tags="prn"/>
      <attr-item tags="rel.an"/>
      <attr-item tags="rel.nn"/>
      <attr-item tags="prn.obj"/>
      <attr-item tags="prn.subj"/>
      <attr-item tags="prn.itg"/>
      <attr-item tags="prn.ind"/>
      <attr-item tags="prn.pers"/>
      <attr-item tags="prn.dem"/>
      <attr-item tags="prn.pos"/>
      <attr-item tags="prn.qnt"/>
      <attr-item tags="prn.tot"/>

      <!-- Temporary -->
      <attr-item tags="det.dem"/>
      <attr-item tags="det.ind"/>
      <attr-item tags="det.qnt"/>
    </def-attr>
    <def-attr n="a_nom">
      <attr-item tags="n"/>
      <attr-item tags="n.acr"/>
      <attr-item tags="np"/>
      <attr-item tags="np.top"/>
      <attr-item tags="np.org"/>
      <attr-item tags="np.al"/>
      <attr-item tags="np.cog"/>
      <attr-item tags="np.ant"/>
    </def-attr>
    <def-attr n="a_num">
      <attr-item tags="num"/>
      <attr-item tags="num.ord"/>
      <attr-item tags="adj.ord"/>
    </def-attr>
    <def-attr n="pers">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
      <attr-item tags="PD"/>
    </def-attr>
    <def-attr n="gen">
      <attr-item tags="m"/>
      <attr-item tags="f"/>
      <attr-item tags="nt"/>
      <attr-item tags="mf"/>
      <attr-item tags="mfn"/>
      <attr-item tags="GD"/>
    </def-attr>
    <def-attr n="transitivity">
      <attr-item tags="tv"/>
      <attr-item tags="iv"/>
    </def-attr>
    <def-attr n="aspect">
      <attr-item tags="imperf"/>
      <attr-item tags="perf"/>
    </def-attr>
    <def-attr n="grau">
      <attr-item tags="comp"/>
      <attr-item tags="sup"/>
    </def-attr>
    <def-attr n="defnes">
      <attr-item tags="ind"/>
      <attr-item tags="def"/>
      <attr-item tags="prx"/>
      <attr-item tags="dst"/>
    </def-attr>
    <def-attr n="nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="ct"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="temps">
      <attr-item tags="lp.pii"/>
      <attr-item tags="lp.aor"/>
      <attr-item tags="pprs.adv"/>
      <attr-item tags="pp"/>
      <attr-item tags="pres"/>
      <attr-item tags="past"/>
      <attr-item tags="pii"/>
      <attr-item tags="pp"/>
      <attr-item tags="aor"/>
      <attr-item tags="inf"/>
    </def-attr>

	<def-attr n="a_ij">
      <attr-item tags="ij"/>
    </def-attr>

	<def-attr n="mood">
      <attr-item tags="imp"/>
    </def-attr>
    <def-attr n="syn">
      <attr-item tags="@X"/>
      <attr-item tags="@SUBJ→"/>
      <attr-item tags="@←SUBJ"/>
    </def-attr>
	
  </section-def-attrs>

  <section-def-vars>
    <def-var n="number"/>
    <def-var n="case"/>
    <def-var n="genere"/>
    <def-var n="defin"/>
    <def-var n="adv_infix"/>
    <def-var n="adv_postfix"/>
    <def-var n="adj_h"/> <!-- Head -->
    <def-var n="adj_g"/> <!-- Grade -->
    <def-var n="np_chunk_s"/><!-- Syntax label -->
    <def-var n="np_chunk_n"/><!-- Chunk name -->
    <def-var n="np_chunk_h"/><!-- Head -->
    <def-var n="np_chunk_q"/><!-- Queue -->
    <def-var n="cur_v_person"/>
    <def-var n="cur_v_number"/>
    <def-var n="cur_v_temp"/>
  </section-def-vars>

  
  <section-def-lists>
	<def-list n="quantity">
		<list-item v="грам"/>
		<list-item v="килограм"/>
	</def-list>

	<def-list n="days">
		<list-item v="понеделник"/>
		<list-item v="вторник"/>
		<list-item v="среда"/>
		<list-item v="четврток"/>
		<list-item v="петок"/>
		<list-item v="сабота"/>
		<list-item v="недела"/>
	</def-list>

	<def-list n="months">
		<list-item v="јануари"/>
		<list-item v="февруари"/>
		<list-item v="март"/>
		<list-item v="април"/>
		<list-item v="март"/>
		<list-item v="јуни"/>
		<list-item v="јули"/>
		<list-item v="август"/>
		<list-item v="септември"/>
		<list-item v="октомври"/>
		<list-item v="ноември"/>
		<list-item v="декември"/>
	</def-list>
  </section-def-lists>  

  <section-def-macros>
  <def-macro n="reset_variables" npar="1">
    <let><var n="number"/>             <lit v=""/></let>
    <let><var n="genere"/>             <lit v=""/></let>
    <let><var n="adj_h"/>      <lit v=""/></let>
    <let><var n="adj_g"/><lit v=""/></let>
    <let><var n="cur_v_person"/>      <lit v=""/></let>
    <let><var n="cur_v_number"/>      <lit v=""/></let>
    <call-macro n="np_cleanup1">
      <with-param pos="1"/>
    </call-macro>
  </def-macro>


    <def-macro n="np_cleanup1" npar="1">
      <let>
        <var n="np_chunk_h"/>
        <lit v=""/>
      </let>
      <let>
        <var n="np_chunk_q"/>
        <lit v=""/>
      </let>
      <let>
        <var n="np_chunk_n"/>
        <lit v="n"/>
      </let>
    </def-macro>

	<def-macro n="conv_ser_pn1" npar="0">
		<choose>
		  <when>
			<test>
			  <not>
				<and>
				  <or>
				  	<equal>
					  <var n="cur_v_person"/>
					  <lit-tag v="p3"/>
					</equal>	
					<equal>
					  <var n="cur_v_person"/>
					  <lit-tag v="p1"/>
					</equal>
				  </or>
				  <equal>
					<var n="cur_v_number"/>
					<lit-tag v="sg"/>
				  </equal>
				</and>
			  </not>
			</test>
			<let>
			  <var n="cur_v_person"/>
			  <lit v=""/>
			</let>
			<let>
			  <var n="cur_v_number"/>
			  <lit v=""/>
			</let>
		  </when>
		</choose>
	</def-macro>

    <def-macro n="prn_conv1" npar="1">
      <choose>
        <when>
          <test>
            <or>
              <equal>
                <clip pos="1" side="sl" part="syn"/>
                <lit-tag v="@SUBJ→"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="syn"/>
                <lit-tag v="@←SUBJ"/>
              </equal>
            </or>
          </test>
          <let>
            <clip pos="1" side="tl" part="a_prn"/>
            <lit-tag v="prn.subj"/>
          </let>
        </when>
		<when>
		  <test>
			<equal>
			  <clip pos="1" side="sl" part="a_prn"/>
              <lit-tag v="prn.pers"/>
			</equal>
		  </test>
		  <let>
            <clip pos="1" side="tl" part="a_prn"/>
            <lit-tag v="prn.obj"/>
          </let>
		</when>
<!--
        <otherwise>
          <let>
            <clip pos="1" side="tl" part="a_prn"/>
            <lit-tag v="prn.obj"/>
          </let>
        </otherwise>
-->
      </choose>
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="gen"/>
              <lit-tag v="mfn"/>
            </equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="gen"/>
            <lit-tag v="mf"/>
          </let>
        </when>
      </choose>
    </def-macro>

    <def-macro n="np_set_defnes1" npar="1">
      <let>
        <var n="defin"/>
        <lit-tag v="UNDET"/>
      </let>
      <choose>
		<when>
		  <test>
		    <in caseless="yes">
		  	  <clip pos="1" side="sl" part="lem"/>
		 	  <list n="days"/>
		    </in>
		  </test>
		  <let>
            <var n="np_chunk_n"/>
            <lit v="n"/>
          </let>
		</when>			
        <when>
          <test>
            <and>
              <or>
                <equal>
                  <clip pos="1" side="sl" part="a_nom"/>
                  <lit-tag v="n"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="a_adj"/>
                  <lit-tag v="adj"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="a_num"/>
                  <lit-tag v="num"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="a_num"/>
                  <lit-tag v="num.ord"/>
                </equal>
              </or>
              <not>
                <or>
                  <equal>
                    <clip pos="1" side="sl" part="defnes"/>
                    <lit-tag v="ind"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="sl" part="defnes"/>
                    <lit v=""/>
                  </equal>
                </or>
              </not>
            </and>
          </test>
          <let>
            <var n="np_chunk_n"/>
            <lit v="d_n"/>
          </let>
          <let>
            <var n="defin"/>
            <lit-tag v="DET"/>
          </let>
          <let>
            <var n="np_chunk_h"/>
            <concat>
              <get-case-from pos="1">
                <lit v="the"/>
              </get-case-from>
              <lit-tag v="det.def.4"/>
              <lit v="$ ^"/>
            </concat>
          </let>
          <modify-case>
            <clip pos="1" side="tl" part="lem"/>
            <lit v="aa"/>
          </modify-case>
        </when>
        <otherwise>
          <let>
            <var n="np_chunk_n"/>
            <lit v="n"/>
          </let>
        </otherwise>
      </choose>
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="syn"/>
              <lit v=""/>
            </equal>
          </test>
          <let>
            <var n="np_chunk_s"/>
            <lit-tag v="@X"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="np_chunk_s"/>
            <clip pos="1" side="sl" part="syn"/>
          </let>
        </otherwise>
      </choose>

    </def-macro>

    <def-macro n="np_set_defnes2" npar="2">
      <call-macro n="np_set_defnes1">
        <with-param pos="2"/>
      </call-macro> 
      <choose>
        <when>
          <test>
            <equal>
              <var n="defin"/>
              <lit-tag v="DET"/>
            </equal>
          </test>
          <let>
            <var n="np_chunk_n"/>
            <lit v="d_m_n"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="np_chunk_n"/>
            <lit v="m_n"/>
          </let>
        </otherwise>
      </choose>
      <choose>
        <when>
          <test>
            <equal>
              <clip pos="1" side="sl" part="syn"/>
              <lit v=""/>
            </equal>
          </test>
          <let>
            <var n="np_chunk_s"/>
            <lit-tag v="@X"/>
          </let>
        </when>
        <otherwise>
          <let>
            <var n="np_chunk_s"/>
            <clip pos="1" side="sl" part="syn"/>
          </let>
        </otherwise>
      </choose>
       
    </def-macro>

    <def-macro n="conv_verb_tense1" npar="1">
      <let>
        <var n="cur_v_person"/>
        <clip pos="1" side="tl" part="pers"/>
      </let>
      <let>
        <var n="cur_v_number"/>
        <clip pos="1" side="tl" part="nbr"/>
      </let>
      <choose>
        <when>
          <test>
            <and>
              <or>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="aor"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="lp.aor"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="lp.pii"/>
                </equal>
              </or>
              <equal>
                <clip pos="1" side="sl" part="nbr"/>
                <lit-tag v="sg"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="pers"/>
                <lit-tag v="p3"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="a_verb"/>
                <lit-tag v="vbser"/>
              </equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="temps"/>
            <lit-tag v="past"/>
          </let>
        </when>

        <when>
          <test>
            <or>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="pii"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="aor"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="lp.aor"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="lp.pii"/>
              </equal>
            </or>
          </test>
          <let>
            <clip pos="1" side="tl" part="temps"/>
            <lit-tag v="past"/>
          </let>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <or>
              <equal>
                <clip pos="1" side="sl" part="pers"/>
                <lit-tag v="p2"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="nbr"/>
                <lit-tag v="pl"/>
              </equal>
            </or>
          </test>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
      </choose>
      <choose>
        <when>
          <test>
            <and>
              <or>
                <equal>
                  <clip pos="1" side="sl" part="a_verb"/>
                  <lit-tag v="vblex"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="a_verb"/>
                  <lit-tag v="vbhaver"/>
                </equal>
              </or>
              <not>
                <and>
                  <equal>
                    <clip pos="1" side="sl" part="pers"/>
                    <lit-tag v="p3"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="sl" part="nbr"/>
                    <lit-tag v="sg"/>
                  </equal>
                </and>
              </not>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
      </choose>
<!--
      <choose>
        <when>
          <test>
                <equal>
                  <clip pos="1" side="sl" part="a_verb"/>
                  <lit-tag v="vbmod"/>
                </equal>
          </test>
          <let>
            <clip pos="1" side="tl" part="temps"/>
            <lit-tag v="inf"/>
          </let>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
      </choose>
-->
    </def-macro>

    <def-macro n="conv_ser_to_haver1" npar="1">
      <let>
        <var n="cur_v_person"/>
        <clip pos="1" side="tl" part="pers"/>
      </let>
      <let>
        <var n="cur_v_number"/>
        <clip pos="1" side="tl" part="nbr"/>
      </let>
      <choose>
        <when>
          <test>
            <not>
              <and>
                <equal>
                  <clip pos="1" side="sl" part="pers"/>
                  <lit-tag v="p3"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="nbr"/>
                  <lit-tag v="sg"/>
                </equal>
              </and>
            </not>
          </test>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>	
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
	  </choose>
	  <choose>
		 <when>
          <test>
            <and>
              <or>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="pii"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="aor"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="lp.aor"/>
                </equal>
                <equal>
                  <clip pos="1" side="sl" part="temps"/>
                  <lit-tag v="lp.pii"/>
                </equal>
              </or>
              <equal>
                <clip pos="1" side="sl" part="nbr"/>
                <lit-tag v="sg"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="pers"/>
                <lit-tag v="p3"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="a_verb"/>
                <lit-tag v="vbser"/>
              </equal>
            </and>
          </test>
          <let>
            <clip pos="1" side="tl" part="temps"/>
            <lit-tag v="past"/>
          </let>
        </when>
        <when>
          <test>
            <or>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="pii"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="aor"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="lp.aor"/>
              </equal>
              <equal>
                <clip pos="1" side="sl" part="temps"/>
                <lit-tag v="lp.pii"/>
              </equal>
            </or>
          </test>
          <let>
            <clip pos="1" side="tl" part="temps"/>
            <lit-tag v="past"/>
          </let>
          <let>
            <clip pos="1" side="tl" part="nbr"/>
            <lit v=""/>
          </let>
          <let>
            <clip pos="1" side="tl" part="pers"/>
            <lit v=""/>
          </let>
        </when>
      </choose>
    </def-macro>

    <def-macro n="adj_set_grau2" npar="2">
      <let>
        <var n="adj_g"/>
        <lit v=""/> 
      </let>
      <let>
        <var n="adj_h"/>
        <lit v=""/> 
      </let>
      <choose>
        <when>
          <test>
            <and>
              <or>
                <equal>
                  <clip pos="2" side="sl" part="grau"/>
                  <lit-tag v="comp"/>
                </equal>
                <equal>
                  <clip pos="2" side="sl" part="grau"/>
                  <lit-tag v="sup"/>
                </equal>
              </or>
              <not>
                <equal>
                  <clip pos="1" side="tl" part="a_adj"/>
                  <lit-tag v="adj.sint"/>
                </equal>
              </not>
            </and>
          </test>
          <choose>
            <when>
              <test>
                <equal>
                  <clip pos="2" side="sl" part="grau"/>
                  <lit-tag v="comp"/>
                </equal>
              </test>
              <let>
                <var n="adj_h"/>
                <concat>
                  <lit v="more"/> 
                  <lit-tag v="preadv"/> 
                  <lit v="$ ^"/> 
                </concat>
              </let>
            </when>
            <when>
              <test>
                <equal>
                  <clip pos="2" side="sl" part="grau"/>
                  <lit-tag v="sup"/>
                </equal>
              </test>
              <let>
                <var n="adj_h"/>
                <concat>
                  <lit v="most"/> 
                  <lit-tag v="preadv"/> 
                  <lit v="$ ^"/> 
                </concat>
              </let>
            </when>
          </choose>
        </when>
        <otherwise>
          <let>
            <var n="adj_g"/>
            <clip pos="2" side="sl" part="grau"/>
          </let>
        </otherwise>
      </choose>
    </def-macro>


  </section-def-macros>


  <section-rules>


  <!-- There is no person, that should be fixed -->
  <rule comment="REGLA: sam-od-sebe">
      <pattern>
        <pattern-item n="sam-od-sebe"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="sg"/></equal>
				<equal><clip pos="1" side="sl" part="pers"/><lit-tag v="p1"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="myself"/>
                  <lit-tag v="prn.ref.p1.sg"/>
                </lu>        
              </chunk>
            </out>
          </when> 
          <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="sg"/></equal>
				<equal><clip pos="1" side="sl" part="pers"/><lit-tag v="p2"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="yourself"/>
                  <lit-tag v="prn.ref.p2.sg"/>
                </lu>        
              </chunk>
            </out>
          </when> 
          <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="sg"/></equal>
				<equal><clip pos="1" side="sl" part="gen"/><lit-tag v="m"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="himself"/>
                  <lit-tag v="prn.ref.p3.m.sg"/>
                </lu>        
              </chunk>
            </out>
          </when> 
		  <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="sg"/></equal>
				<equal><clip pos="1" side="sl" part="gen"/><lit-tag v="f"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="herself"/>
                  <lit-tag v="prn.ref.p3.f.sg"/>
                </lu>        
              </chunk>
            </out>
          </when> 
		  <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="sg"/></equal>
				<equal><clip pos="1" side="sl" part="gen"/><lit-tag v="nt"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="itself"/>
                  <lit-tag v="prn.ref.p3.nt.sg"/>
                </lu>        
              </chunk>
            </out>
          </when> 
		  <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="pl"/></equal>
				<equal><clip pos="1" side="sl" part="pers"/><lit-tag v="p1"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="ourselves"/>
                  <lit-tag v="prn.ref.p1.pl"/>
                </lu>        
              </chunk>
            </out>
          </when>
		  <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="pl"/></equal>
				<equal><clip pos="1" side="sl" part="pers"/><lit-tag v="p2"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="ourselves"/>
                  <lit-tag v="prn.ref.p2.pl"/>
                </lu>        
              </chunk>
            </out>
          </when>
		  <when>
            <test><and>
				<equal><clip pos="1" side="sl" part="nbr"/><lit-tag v="pl"/></equal>
				<equal><clip pos="1" side="sl" part="pers"/><lit-tag v="p3"/></equal>
			</and></test>			
            <out>
              <chunk name="by-self" case="caseFirstWord">
                <tags>
                  <tag><lit-tag v="ADV"/></tag>
                </tags>
                <lu>
                  <lit v="by"/><lit-tag v="pr"/>
                </lu>
                <b/>
                <lu>
                  <lit v="themselves"/>
                  <lit-tag v="prn.ref.p3.pl"/>
                </lu>        
              </chunk>
            </out>
          </when>
        </choose>
      </action>
    </rule>


    <rule comment="REGLA: prn_ref_clt">
      <pattern>
        <pattern-item n="prn_ref_clt"/>
      </pattern>
      <action/>
    </rule>

 	<rule comment="REGLA: det_pos">
      <pattern>
        <pattern-item n="det_pos"/>
      </pattern>
      <action>
        <out>
          <chunk name="d" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lem"/>
			  <lit-tag v="det.pos.sp"/>
            </lu>        
          </chunk>
        </out>
      </action>
    </rule>


    <!-- Sintagmas nominales -->

	
	
    <rule comment="REGLA: at_age_of num year">
      <pattern>
        <pattern-item n="at_age_of"/>
        <pattern-item n="num"/>
        <pattern-item n="year"/>
      </pattern>
      <action>
        <out>
          <chunk name="d" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
            </lu>        
			<b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_num"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>        
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: prn_ref_pos">
      <pattern>
        <pattern-item n="prn_ref_pos"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="tl" part="lemh"/> 
          <lit v="its"/>
        </let>
        <choose>
          <when> 
            <test>
              <and>
                <equal>
                  <var n="cur_v_person"/>
                  <lit-tag v="p1"/>
                </equal>
                <equal>
                  <var n="cur_v_number"/>
                  <lit-tag v="sg"/>
                </equal>
              </and>
            </test>
            <let>
              <clip pos="1" side="tl" part="lemh"/>
              <lit v="my"/>
            </let>
          </when> 
          <when> 
            <test>
              <and>
                <equal>
                  <var n="cur_v_person"/>
                  <lit-tag v="p1"/>
                </equal>
                <equal>
                  <var n="cur_v_number"/>
                  <lit-tag v="pl"/>
                </equal>
              </and>
            </test>
            <let>
              <clip pos="1" side="tl" part="lemh"/>
              <lit v="our"/>
            </let>
          </when> 
          <when> 
            <test>
              <and>
                <equal>
                  <var n="cur_v_person"/>
                  <lit-tag v="p3"/>
                </equal>
                <equal>
                  <var n="cur_v_number"/>
                  <lit-tag v="pl"/>
                </equal>
              </and>
            </test>
            <let>
              <clip pos="1" side="tl" part="lemh"/>
              <lit v="their"/>
            </let>
          </when> 
          <when> 
            <test>
              <equal>
                <var n="cur_v_person"/>
                <lit-tag v="p2"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="lemh"/>
              <lit v="your"/>
            </let>
          </when> 
        </choose>
        <out>
          <chunk name="d" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
              <tag><clip pos="1" side="sl" part="syn"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <lit-tag v="det.pos.sp"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>        
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: prn">
      <pattern>
        <pattern-item n="prn"/>
      </pattern>
      <action>
        <call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>     
        <out>
          <chunk name="p" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="PRN"/></tag>
		      <tag><clip pos="1" side="sl" part="syn"/></tag>
              <tag><clip pos="1" side="tl" part="gen"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: prn_rel">
      <pattern>
        <pattern-item n="prn_rel"/>
      </pattern>
      <action>
        <out>
          <chunk name="p" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="REL"/></tag>
              <!--<tag><clip pos="1" side="sl" part="syn"/></tag>-->
              <tag><clip pos="1" side="tl" part="gen"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr" link-to="3"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: prn_dem">
      <pattern>
        <pattern-item n="prn_dem"/>
      </pattern>
      <action>
        <choose>
          <when>
            <test>
              <or>
                <equal>
                  <clip pos="1" side="tl" part="a_prn"/>
                  <lit-tag v="det.qnt"/>
                </equal>
                <equal>
                  <clip pos="1" side="tl" part="a_prn"/>
                  <lit-tag v="det.ind"/>
                </equal>
              </or>
            </test>
            <let>
              <clip pos="1" side="tl" part="gen"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="p" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="sl" part="syn"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: cog">
      <pattern>
        <pattern-item n="cog"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="cog" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: ant">
      <pattern>
        <pattern-item n="ant"/>
      </pattern>
      <action>
        <out>
          <chunk name="ant" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="tl" part="syn"/></tag>
              <tag><lit-tag v="ANT"/></tag>
              <tag><clip pos="1" side="tl" part="gen"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: top">
      <pattern>
        <pattern-item n="top"/>
      </pattern>
      <action>
        <out>
          <chunk name="top" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="tl" part="syn"/></tag>
              <tag><lit-tag v="TOP"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: org">
      <pattern>
        <pattern-item n="org"/>
      </pattern>
      <action>
        <out>
          <chunk name="org" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><clip pos="1" side="tl" part="syn"/></tag>
              <tag><lit-tag v="ORG"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	
    <rule comment="REGLA: num">
      <pattern>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <let>
          <var n="number"/>
          <clip pos="1" side="tl" part="nbr"/>
        </let>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="nbr"/>
                <lit-tag v="sp"/>
              </equal>
            </test>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><var n="number"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: num num num">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="num"/>
        <pattern-item n="num"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <let>
          <var n="number"/>
          <clip pos="1" side="tl" part="nbr"/>
        </let>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="nbr"/>
                <lit-tag v="sp"/>
              </equal>
            </test>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><var n="number"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_num"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_num"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: nom">
      <pattern>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

	<rule comment="REGLA: pnom">
      <pattern>
        <pattern-item n="pnom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: nom-nom">
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="guio"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <var n="np_chunk_h"/>
              </get-case-from>
              <get-case-from pos="3">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr" link-to="4"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: num num nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="2" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="2" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>

        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_num"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: num guio nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="guio"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="1"/>
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



    <rule comment="REGLA: num guio adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="guio"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="4"/>
          <with-param pos="3"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



    <rule comment="REGLA: num adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



    <rule comment="REGLA: num adj adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_m_m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


    <rule comment="REGLA: num nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="a_num"/>
                <lit-tag v="adj.ord"/>
              </equal>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="2" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="nbr" link-to="4"/>
              <clip pos="2" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: не-nom">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="guio"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <lit v="non"/>
              <lit-tag v="adv"/>
            </lu>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr" link-to="4"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: pref adj">
      <pattern>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <choose> 
          <when>
            <test>
              <equal>
                <var n="adj_h"/>
                <lit v=""/>
              </equal>
            </test>
            <let>
              <clip pos="2" side="tl" part="lemh"/>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <var n="adj_h"/>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pref adj и adj">
      <pattern>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="i"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="a_i_a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <var n="adj_h"/>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_adj"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: num pref adj">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
        <let>
          <var n="number"/>
          <clip pos="1" side="tl" part="nbr"/>
        </let>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="nbr"/>
                <lit-tag v="sp"/>
              </equal>
            </test>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
        </choose>
        <choose>
          <when>
            <test>
              <not>
                <or>
                  <equal>
                    <clip pos="1" side="tl" part="a_num"/>
                    <lit-tag v="num"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="tl" part="a_adj"/>
                    <lit-tag v="det.qnt"/>
                  </equal>
                </or>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><var n="number"/></tag>
              <tag><clip pos="1" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
			  <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>	
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: num pref adj и adj">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="i"/>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
        <let>
          <var n="number"/>
          <clip pos="1" side="tl" part="nbr"/>
        </let>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="1" side="tl" part="nbr"/>
                <lit-tag v="sp"/>
              </equal>
            </test>
            <let>
              <var n="number"/>
              <lit-tag v="sg"/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="m_a_i_a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><var n="number"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
			  <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_adj"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: num pref adj и adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="i"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="6"/>
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="m_a_i_a_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="6" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
			  <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="whole"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_adj"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
            <b pos="4"/>
            <lu>
              <clip pos="6" side="tl" part="lemh"/>
              <clip pos="6" side="tl" part="a_nom"/>
              <clip pos="6" side="tl" part="nbr" link-to="4"/>
              <clip pos="6" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: pref adj nom">
      <pattern>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <var n="adj_h"/>
                <lit v=""/>
              </equal>
            </test>
            <let>
              <clip pos="2" side="tl" part="lemh"/>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <var n="adj_h"/>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr" link-to="4"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



    <rule comment="REGLA: num pref adj adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="5"/>
          <with-param pos="1"/>
        </call-macro>
        <choose>
<!--
          <when>
            <test>
              <not>
                <or>
                  <equal>
                    <clip pos="1" side="tl" part="a_num"/>
                    <lit-tag v="num"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="tl" part="a_adj"/>
                    <lit-tag v="det.qnt"/>
                  </equal>
                </or>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
-->
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_adj"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_nom"/>
              <clip pos="5" side="tl" part="nbr" link-to="4"/>
              <clip pos="5" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: num pref adj adj adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="6"/>
          <with-param pos="1"/>
        </call-macro>
        <choose>
<!--
          <when>
            <test>
              <not>
                <or>
                  <equal>
                    <clip pos="1" side="tl" part="a_num"/>
                    <lit-tag v="num"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="tl" part="a_adj"/>
                    <lit-tag v="det.qnt"/>
                  </equal>
                </or>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
-->
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_adj"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_adj"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
            <b pos="4"/>
            <lu>
              <clip pos="6" side="tl" part="lemh"/>
              <clip pos="6" side="tl" part="a_nom"/>
              <clip pos="6" side="tl" part="nbr" link-to="4"/>
              <clip pos="6" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: num pref adj nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="pref"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="adj_set_grau2">
          <with-param pos="3"/>
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="np_set_defnes2">
          <with-param pos="4"/>
          <with-param pos="3"/>
        </call-macro>
        <choose>
<!-- why this?
          <when>
            <test>
              <not>
                <or>
                  <equal>
                    <clip pos="1" side="tl" part="a_num"/>
                    <lit-tag v="num"/>
                  </equal>
                  <equal>
                    <clip pos="1" side="tl" part="a_adj"/>
                    <lit-tag v="det.qnt"/>
                  </equal>
                </or>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
-->
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <var n="adj_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <var n="adj_g"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr" link-to="4"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

    <rule comment="REGLA: adj nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="2"/>
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="1" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="2" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="grau"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="nbr" link-to="4"/>
              <clip pos="2" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

  
    <rule comment="REGLA: num nom nom">
      <pattern>
        <pattern-item n="num"/>
        <pattern-item n="nom"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_num"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_nom"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
		<choose>
		  <when>
			<test>
			  <in caseless="yes">
				<clip pos="2" side="sl" part="lem"/>
				<list n="quantity"/>
			  </in>
			</test>
			<out>
			  <chunk namefrom="np_chunk_n" >
				<tags><tag><lit-tag v=""/></tag></tags>
				<b/>
				<lu>
				  <lit v="of"/>
				  <lit-tag v="pr"/>
				</lu>
			  </chunk>
			</out>
		  </when>
		</choose>
		<out>
		  <chunk namefrom="np_chunk_n" case="">
            <tags>
              <tag><lit-tag v=""/></tag>
            </tags>
            <b/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
		</out>
      </action>
    </rule>



    <rule comment="REGLA: nom guio adj nom">
      <pattern>
        <pattern-item n="nom"/>
        <pattern-item n="guio"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="4"/>
          <with-param pos="3"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_nom"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <clip pos="3" side="tl" part="grau"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr" link-to="4"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>



    <rule comment="REGLA: adj guio adj nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="guio"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="4"/>
          <with-param pos="3"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="1" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="3" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="3" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="grau"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adj"/>
              <clip pos="3" side="tl" part="grau"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr" link-to="4"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


    <rule comment="REGLA: adj adj nom">
      <pattern>
        <pattern-item n="adj"/>
        <pattern-item n="adj"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes2">
          <with-param pos="3"/>
          <with-param pos="1"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="2" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="2" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <choose>
          <when>
            <test>
              <not>
                <equal>
                  <clip pos="1" side="tl" part="a_adj"/>
                  <lit-tag v="det.qnt"/>
                </equal>
              </not>
            </test>
            <let>
              <clip pos="1" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="grau"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_adj"/>
              <clip pos="2" side="tl" part="grau"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr" link-to="4"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>


    <rule comment="REGLA: adj">
      <pattern>
        <pattern-item n="adj"/>
      </pattern>
      <action>
        <call-macro n="np_set_defnes1">
          <with-param pos="1"/>
        </call-macro>
        <let>
          <var n="number"/>
          <lit v=""/>
        </let>
        <choose>
          <when>
            <test>
              <or>
                <equal>
                  <clip pos="1" side="tl" part="a_prn"/>
                  <lit-tag v="det.qnt"/>
                </equal>
                <equal>
                  <clip pos="1" side="tl" part="a_prn"/>
                  <lit-tag v="det.ind"/>
                </equal>
              </or>
            </test>
            <let>
              <var n="number"/>
              <lit-tag v="sp"/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="a" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA.@X"/></tag>
              <tag><clip pos="1" side="sl" part="gen"/></tag>
              <tag><clip pos="1" side="sl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adj"/>
              <clip pos="1" side="tl" part="grau"/>
              <var n="number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
        <let>
          <var n="number"/>
          <lit v=""/>
        </let>
        <call-macro n="np_cleanup1">
          <with-param pos="1"/>
        </call-macro>
      </action>
    </rule>

  

    <!-- Verb patterns -->

    <rule comment="REGLA: vbhaver_fin_neg">
      <pattern>
        <pattern-item n="vbhaver_fin_neg"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <lit v="do"/>
              <lit-tag v="vblex"/>
              <clip pos="1" side="tl" part="temps"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="nbr"/>
            </lu>
            <b/>
            <lu>
              <lit v="not"/>
              <lit-tag v="adv"/>
            </lu>
            <b/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: vbhaver_fin_neg да prn_pers_clt v_fin">
      <pattern>
        <pattern-item n="vbhaver_fin_neg"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_fin"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<out>
		  <chunk name="v" case="caseFirstWord">
          	<tags>
            	<tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
              <lit-tag v="vaux.inf"/>
            </lu>
			<b/>
			<lu>
			  <lit v="not"/>
			  <lit-tag v="adv"/>
			</lu>
          </chunk>
		</out>
		<choose>
		  <when>
			<test>
			  <equal>
				<clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
			  <chunk name="v" case="caseFirstWord">
           		<tags>
              	  <tag><lit-tag v="SV"/></tag>
                </tags>
				<b/>
                <lu>
                  <lit v="have"/>
                  <lit-tag v="vbhaver.inf"/>
                </lu>
                <b/>
                <lu>
                  <clip pos="4" side="tl" part="lemh"/>
                  <clip pos="4" side="tl" part="a_verb"/>
                  <lit-tag v="pp"/>
                  <clip pos="4" side="tl" part="lemq"/>
                </lu>
              </chunk>
			</out>
		  </when>
		  <otherwise>
			<out>
			  <chunk name="v" case="caseFirstWord">
           		<tags>
                  <tag><lit-tag v="SV"/></tag>
                </tags>
				<b/>
                <lu>
                  <clip pos="4" side="tl" part="lemh"/>
                  <clip pos="4" side="tl" part="a_verb"/>
                  <lit-tag v="pres"/>
                  <clip pos="4" side="tl" part="lemq"/>
                </lu>
              </chunk>
            </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

	
	<!-- TODO: deal with the clitic -->
    <rule comment="REGLA: vbhaver_fin_neg да v_fin">
      <pattern>
        <pattern-item n="vbhaver_fin_neg"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_fin"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<out>
		  <chunk name="v" case="caseFirstWord">
          	<tags>
            	<tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <lit v="will"/>
              <lit-tag v="vaux.inf"/>
            </lu>
			<b/>
			<lu>
			  <lit v="not"/>
			  <lit-tag v="adv"/>
			</lu>
          </chunk>
		</out>
		<choose>
		  <when>
			<test>
			  <equal>
				<clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
			  <chunk name="v" case="caseFirstWord">
           		<tags>
              	  <tag><lit-tag v="SV"/></tag>
                </tags>
				<b/>
                <lu>
                  <lit v="have"/>
                  <lit-tag v="vbhaver.inf"/>
                </lu>
                <b/>
                <lu>
                  <clip pos="3" side="tl" part="lemh"/>
                  <clip pos="3" side="tl" part="a_verb"/>
                  <lit-tag v="pp"/>
                  <clip pos="3" side="tl" part="lemq"/>
                </lu>
              </chunk>
			</out>
		  </when>
		  <otherwise>
			<out>
			  <chunk name="v" case="caseFirstWord">
           		<tags>
                  <tag><lit-tag v="SV"/></tag>
                </tags>
				<b/>
                <lu>
                  <clip pos="3" side="tl" part="lemh"/>
                  <clip pos="3" side="tl" part="a_verb"/>
                  <lit-tag v="pres"/>
                  <clip pos="3" side="tl" part="lemq"/>
                </lu>
              </chunk>
            </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

    <rule comment="REGLA: vbser">
      <pattern>
        <pattern-item n="vbser"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_ser_pn1"/>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
			<b/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pp">
      <pattern>
        <pattern-item n="pp"/>
      </pattern>
      <action>
        <out>
          <chunk name="pp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SA"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: v_cop_fin pp">
      <pattern>
        <pattern-item n="v_cop_fin"/>
        <pattern-item n="pp"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v_pp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
			  <lit-tag v="past"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: pp v_cop_fin">
      <pattern>
        <pattern-item n="pp"/>
        <pattern-item n="v_cop_fin"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v_pp" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <get-case-from pos="2">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: да v_pres">
      <pattern>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <out>
          <chunk name="to_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="to"/>
              </get-case-from>
              <lit-tag v="pr"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ќе">
      <pattern>
        <pattern-item n="exp"/>
      </pattern>
      <action>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	
    <rule comment="REGLA: да ne v_fin">
      <pattern>
        <pattern-item n="inf"/>
        <pattern-item n="ne"/>
		<pattern-item n="v_fin"/>
      </pattern>
      <action>
		 <call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="to_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
              	<lit v="not"/>
              </get-case-from>
              <lit-tag v="adv"/>
            </lu>
            <b pos="1"/>
			<lu>
              <get-case-from pos="1">
              	<lit v="to"/>
              </get-case-from>
              <lit-tag v="pr"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <clip pos="3" side="tl" part="temps"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	 <rule comment="REGLA: да ne prn_ref_pers v_fin">
      <pattern>
        <pattern-item n="inf"/>
        <pattern-item n="ne"/>
        <pattern-item n="prn_ref_pers"/>
		<pattern-item n="v_fin"/>
      </pattern>
      <action>
		 <call-macro n="conv_verb_tense1">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="to_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
              	<lit v="not"/>
              </get-case-from>
              <lit-tag v="adv"/>
            </lu>
            <b pos="1"/>
			<lu>
              <get-case-from pos="1">
              	<lit v="to"/>
              </get-case-from>
              <lit-tag v="pr"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <clip pos="4" side="tl" part="temps"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ќе unknown">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="unknown"/>
      </pattern>
      <action>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="whole"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ќе v_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <out>
          <chunk name="will_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: ќе prn_clitic v_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <out>
          <chunk name="will_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: prn_clitic v_fin да v_cop_fin">
      <pattern>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_fin"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_cop_fin"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv_verb_tense1">
          <with-param pos="4"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <or>
              <and>
                <equal>
                  <clip pos="4" side="tl" part="nbr"/>
                  <lit-tag v="sg"/>
                </equal>
                <or> 
                  <equal>
                    <clip pos="4" side="tl" part="pers"/>
                    <lit-tag v="p2"/>
                  </equal>
                  <equal>
                    <clip pos="4" side="tl" part="pers"/>
                    <lit-tag v="p1"/>
                  </equal>
                </or>
              </and>
               
                  <equal>
                    <clip pos="2" side="tl" part="temps"/>
                    <lit-tag v="past"/>
                  </equal>
              </or>
            </test>
            <let>
              <clip pos="4" side="tl" part="nbr"/>
              <lit v=""/>
            </let>
            <let>
              <clip pos="4" side="tl" part="pers"/>
              <lit v=""/>
            </let>
          </when>
        </choose>
        <out>
          <chunk name="v_to_be" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="4" side="tl" part="pers"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <lit-tag v="pr"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: ќе prn_clitic prn_clitic v_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <out>
          <chunk name="will_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: да prn_clitic v_pres">
      <pattern>
        <pattern-item n="inf"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <out>
          <chunk name="to_v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="to"/>
              </get-case-from>
              <lit-tag v="pr"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- FP: modal verb constructs -->

    <rule comment="REGLA: vbmod">
      <pattern>
        <pattern-item n="vbmod"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

    <rule comment="REGLA: vbmod да v_pres_or_ser">
      <pattern>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres_or_ser"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		        <b/>			
		        <lu>
		          <clip pos="3" side="tl" part="lemh"/>
		          <clip pos="3" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="3" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <clip pos="3" side="tl" part="lemh"/>
		          <clip pos="3" side="tl" part="a_verb"/>
		          <lit-tag v="inf"/>
		          <clip pos="3" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

    <rule comment="REGLA: vbmod да">
      <pattern>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>


    <rule comment="REGLA: ne vbmod да v_pres_or_ser">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="2" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		        <b/>			
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b/>
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="inf"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>



    <rule comment="REGLA: ne vbmod да">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="2" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

    <rule comment="REGLA: vbmod да prn_clitic v_pres">
      <pattern>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="3"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		        <b/>			
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="prpers"/>
				  <lit-tag v="prn"/>
				  <lit-tag v="obj"/>
				  <clip pos="3" side="tl" part="pers"/>
				  <clip pos="3" side="tl" part="gen"/>
				  <clip pos="3" side="tl" part="nbr"/>
		          <var n="np_chunk_q"/>
            	</lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="inf"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="prpers"/>
				  <lit-tag v="prn"/>
				  <lit-tag v="obj"/>
				  <clip pos="3" side="tl" part="pers"/>
				  <clip pos="3" side="tl" part="gen"/>
				  <clip pos="3" side="tl" part="nbr"/>
		          <var n="np_chunk_q"/>
            	</lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>


    <rule comment="REGLA: не vbmod да prn_clitic v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="4"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="2" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>	
		        <b/>			
		        <lu>
		          <clip pos="5" side="tl" part="lemh"/>
		          <clip pos="5" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="5" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="prpers"/>
				  <lit-tag v="prn"/>
				  <lit-tag v="obj"/>
				  <clip pos="4" side="tl" part="pers"/>
				  <clip pos="4" side="tl" part="gen"/>
				  <clip pos="4" side="tl" part="nbr"/>
		          <var n="np_chunk_q"/>
            	</lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b pos="1"/>
		        <lu>
		          <clip pos="5" side="tl" part="lemh"/>
		          <clip pos="5" side="tl" part="a_verb"/>
		          <lit-tag v="inf"/>
		          <clip pos="5" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="prpers"/>
				  <lit-tag v="prn"/>
				  <lit-tag v="obj"/>
				  <clip pos="4" side="tl" part="pers"/>
				  <clip pos="4" side="tl" part="gen"/>
				  <clip pos="4" side="tl" part="nbr"/>
		          <var n="np_chunk_q"/>
            	</lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>


    <rule comment="REGLA: vbmod да prn_ref_pers v_pres">
      <pattern>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_ref_pers"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="3"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>
	
		        <b/>			
		        <lu>
		          <lit v="be"/>
				  <lit-tag v="vbser.pp"/>
		        </lu>
		        <b/>			
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
				<lu>
		          <lit v="be"/>
		          <lit-tag v="vbser.inf"/>
		        </lu>
		        <b/>
		        <lu>
		          <clip pos="4" side="tl" part="lemh"/>
		          <clip pos="4" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="4" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>

    
    <rule comment="REGLA: ne vbmod да prn_ref_pers v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="vbmod"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_ref_pers"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="4"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
                <clip pos="1" side="tl" part="temps"/>
				<lit-tag v="past"/>
			  </equal>
			</test>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
				<b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
		        <b/>
		        <lu>
		          <lit v="have"/>
				  <lit-tag v="vbhaver.inf"/>
		        </lu>
		        <b/>			
		        <lu>
		          <lit v="be"/>
				  <lit-tag v="vbser.pp"/>
		        </lu>
		        <b/>			
		        <lu>
		          <clip pos="5" side="tl" part="lemh"/>
		          <clip pos="5" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="5" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
				<lu>
		          <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <lit-tag v="vaux.past"/>
		        </lu>
		        <b/>
				<lu>
				  <lit v="not"/>
				  <lit-tag v="adv"/>
				</lu>
				<b/>
				<lu>
		          <lit v="be"/>
		          <lit-tag v="vbser.inf"/>
		        </lu>
		        <b/>
		        <lu>
		          <clip pos="5" side="tl" part="lemh"/>
		          <clip pos="5" side="tl" part="a_verb"/>
		          <lit-tag v="pp"/>
		          <clip pos="5" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
      </action>
    </rule>


    <rule comment="REGLA: не v_cop_fin">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="v_cop_fin"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>

              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <get-case-from pos="2">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

<!-- 
    <rule comment="REGLA: не v_cop_inf">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="v_cop_inf"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>

              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
            <b pos="1"/>
            <lu>
              <get-case-from pos="2">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>
-->


    <rule comment="REGLA: не vblex">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="vblex"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<choose>
		  <when>
			<test>
			  <equal>
				<clip pos="2" side="tl" part="mood"/>
				<lit-tag v="imp"/>
			  </equal>
			</test>
			<let>
			  <var n="cur_v_temp"/>
			  <lit-tag v="pres"/>
			</let>
		  </when>
		  <otherwise>
			<let>
			  <var n="cur_v_temp"/>
              <clip pos="2" side="tl" part="temps"/>
			</let>
		  </otherwise>
		</choose>			
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="do"/>
              </get-case-from>
			  <lit-tag v="vbdo"/>
			  <var n="cur_v_temp"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
            </lu>
			<b/>
            <lu>
              <get-case-from pos="1">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <get-case-from pos="1">
                <clip pos="2" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="inf"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: не treba">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="treba"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<choose>
		  <when>
		    <test>	
			  <equal>
	            <clip pos="2" side="sl" part="temps"/> 
				<lit-tag v="pres"/>
			  </equal>
			</test>
		    <out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		            <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="2" side="tl" part="a_verb"/>
		          <clip pos="2" side="tl" part="temps"/>
		          <clip pos="2" side="tl" part="pers"/>
		          <clip pos="2" side="tl" part="nbr"/>
		          <clip pos="2" side="tl" part="lemq"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <get-case-from pos="2">
		            <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="1" side="tl" part="a_adv"/>
		          <clip pos="1" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		            <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="2" side="tl" part="a_verb"/>
		          <clip pos="2" side="tl" part="temps"/>
		          <clip pos="2" side="tl" part="pers"/>
		          <clip pos="2" side="tl" part="nbr"/>
		          <clip pos="2" side="tl" part="lemq"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <get-case-from pos="2">
		            <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="1" side="tl" part="a_adv"/>
		        </lu>
				<b/>
		        <lu>
		          <lit v="have"/>
  		          <lit-tag v="vbhaver"/>
  		          <lit-tag v="pres"/>
		          <clip pos="1" side="tl" part="lemq"/>
		        </lu>
		      </chunk>
		    </out>

		  </otherwise>
		</choose>
      </action>
    </rule>

	<rule comment="REGLA: не треба да">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		  <out>
		    <chunk name="v" case="caseFirstWord">
		      <tags>
		        <tag><lit-tag v="SV"/></tag>
		      </tags>
		      <lu>
		        <get-case-from pos="1">
		          <clip pos="2" side="tl" part="lemh"/>
		        </get-case-from>
		        <clip pos="2" side="tl" part="a_verb"/>
		        <clip pos="2" side="tl" part="temps"/>
		        <clip pos="2" side="tl" part="pers"/>
		        <clip pos="2" side="tl" part="nbr"/>
		        <clip pos="2" side="tl" part="lemq"/>
		      </lu>
		      <b pos="1"/>
		      <lu>
		        <get-case-from pos="2">
		          <clip pos="1" side="tl" part="lemh"/>
		        </get-case-from>
		        <clip pos="1" side="tl" part="a_adv"/>
		        <clip pos="1" side="tl" part="lemq"/>
		      </lu>
		    </chunk>
	    </out>
      </action>
    </rule>

	<rule comment="REGLA: не треба да prn_ref_pers">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_ref_pers"/>
        <pattern-item n="v_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <call-macro n="conv_verb_tense1">
          <with-param pos="5"/>
        </call-macro>
		<choose>
		  <when>
		    <test>	
			  <equal>
	            <clip pos="2" side="sl" part="temps"/> 
				<lit-tag v="pres"/>
			  </equal>
			</test>
		    <out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		            <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="2" side="tl" part="a_verb"/>
		          <clip pos="2" side="tl" part="temps"/>
		          <clip pos="2" side="tl" part="pers"/>
		          <clip pos="2" side="tl" part="nbr"/>
		          <clip pos="2" side="tl" part="lemq"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <get-case-from pos="2">
		            <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="1" side="tl" part="a_adv"/>
		          <clip pos="1" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="be"/>
  		          <lit-tag v="vbser.inf"/>
		        </lu>
		      </chunk>
		    </out>
		  </when>
		  <otherwise>
			<out>
		      <chunk name="v" case="caseFirstWord">
		        <tags>
		          <tag><lit-tag v="SV"/></tag>
		        </tags>
		        <lu>
		          <get-case-from pos="1">
		            <clip pos="2" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="2" side="tl" part="a_verb"/>
		          <clip pos="2" side="tl" part="temps"/>
		          <clip pos="2" side="tl" part="pers"/>
		          <clip pos="2" side="tl" part="nbr"/>
		          <clip pos="2" side="tl" part="lemq"/>
		        </lu>
		        <b pos="1"/>
		        <lu>
		          <get-case-from pos="2">
		            <clip pos="1" side="tl" part="lemh"/>
		          </get-case-from>
		          <clip pos="1" side="tl" part="a_adv"/>
		        </lu>
				<b/>
		        <lu>
		          <lit v="have"/>
  		          <lit-tag v="vbhaver"/>
  		          <lit-tag v="pres"/>
		          <clip pos="1" side="tl" part="lemq"/>
		        </lu>
				<b/>
				<lu>
		          <lit v="be"/>
  		          <lit-tag v="vbser.pp"/>
		        </lu>
		      </chunk>
		    </out>
		  </otherwise>
		</choose>
		<out>
		  <chunk name="v" case="caseFirstWord">
		    <tags>
		      <tag><lit-tag v="SV"/></tag>
		    </tags>
			<b/>
			<lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_verb"/>
              <lit-tag v="past"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		</out>
      </action>

    </rule>

    <rule comment="REGLA: не би треба да v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="hyp"/>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu> 
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/> 
            </lu> 
            <b pos="2"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: би треба да v_pres">
      <pattern>
        <pattern-item n="hyp"/>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: би v_lp_aor">
      <pattern>
        <pattern-item n="hyp"/>
        <pattern-item n="v_lp_aor"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="would"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: ќе v_cop_fin_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="v_cop_fin_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser.inf"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: не v_cop_fin_pres v_lp_aor">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="v_cop_fin_pres"/>
        <pattern-item n="v_lp_aor"/>
      </pattern>
      <action>
        <let>
          <clip pos="1" side="sl" part="a_verb"/>
          <lit-tag v="vblex"/>
        </let>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="do"/>
              </get-case-from>
              <lit-tag v="vblex.past"/>
            </lu>
            <b pos="1"/>
            <lu>
              <get-case-from pos="2">
                <clip pos="1" side="tl" part="lemh"/>
              </get-case-from>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: треба да v_cop_fin_pres">
      <pattern>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_cop_fin_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vbser.inf"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: треба да v_pres">
      <pattern>
        <pattern-item n="treba"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: poradi_što v_pres_p3_sg">
      <pattern>
        <pattern-item n="poradi_što"/>
        <pattern-item n="v_pres_p3_sg"/>
      </pattern>
      <action>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: pprs_adv">
      <pattern>
        <pattern-item n="pprs_adv"/>
      </pattern>
      <action>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="ger"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: ќе мора да prn_clitic v_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="mora"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="must"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: би може да prn_clitic v_pres">
      <pattern>
        <pattern-item n="hyp"/>
        <pattern-item n="može"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="can"/>
              </get-case-from>
              <lit-tag v="vaux.past"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- doesn't work -->
    <rule comment="REGLA: би може да v_pres">
      <pattern>
        <pattern-item n="hyp"/>
        <pattern-item n="može"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="can"/>
              </get-case-from>
              <lit-tag v="vaux.past"/>
            </lu>
            <b/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: ќе може да v_pres">
      <pattern>
        <pattern-item n="exp"/>
        <pattern-item n="može"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="will"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <lit v="be"/>
              <lit-tag v="vblex.inf"/>
              <lit v="# able to"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: imprt">
     <pattern>
       <pattern-item n="imprt"/>
     </pattern>
     <action>
       <out>
         <chunk name="v" case="caseFirstWord">
           <tags>
             <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
     </action>
    </rule>


    <rule comment="REGLA: interj">
       <pattern>
         <pattern-item n="interj"/>
       </pattern>
       <action>
         <out>
           <chunk name="ij" case="caseFirstWord">
             <tags>
               <tag><lit-tag v="INTERJ"/></tag>
              </tags>
              <lu>
                <clip pos="1" side="tl" part="lemh"/>
                <lit-tag v="ij"/>
                <clip pos="1" side="tl" part="lemq"/>
              </lu>
            </chunk>
          </out>
       </action>
    </rule>

    <rule comment="REGLA: sent">
       <pattern>
         <pattern-item n="sent"/>
       </pattern>
       <action>
         <out>
           <chunk name="sent" case="caseFirstWord">
             <tags>
               <tag><lit-tag v="SENT"/></tag>
              </tags>
              <lu>
                <clip pos="1" side="tl" part="whole"/>
              </lu>
            </chunk>
          </out>
          <call-macro n="reset_variables">
            <with-param pos="1"/>
          </call-macro>
       </action>
    </rule>

    <rule comment="REGLA: не prn_clitic v_pres adv">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
        <pattern-item n="adv"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
        <choose>
          <when>
            <test>
              <equal>
                <clip pos="4" side="tl" part="a_adv"/>
                <lit-tag v="adv"/>
              </equal>
            </test>
            <let>
              <var n="adv_infix"/>
              <concat>
                <lit v="^"/>
                <clip pos="4" side="tl" part="lemh"/>
                <clip pos="4" side="tl" part="a_adv"/>
                <clip pos="4" side="tl" part="lemq"/>
                <lit v="$ "/>
              </concat>
            </let>
          </when>
          <otherwise>
            <let>
              <var n="adv_postfix"/>
              <concat>
                <lit v="^"/>
                <clip pos="4" side="tl" part="lemh"/>
                <clip pos="4" side="tl" part="a_adv"/>
                <clip pos="4" side="tl" part="lemq"/>
                <lit v="$ "/>
              </concat>
            </let>
          </otherwise>
        </choose>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="do"/>
              </get-case-from>
              <lit-tag v="vblex.pres"/>
              <clip pos="3" side="tl" part="pers"/>
              <clip pos="3" side="tl" part="nbr"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <var n="adv_infix"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <var n="adv_postfix"/>
          </chunk>
        </out>
        <let>
          <var n="adv_infix"/>
          <lit v=""/>
        </let>
        <let>
          <var n="adv_postfix"/>
          <lit v=""/>
        </let>
      </action>
    </rule>

	<rule comment="REGLA: да не prn_clitic v_pres">
      <pattern>
        <pattern-item n="inf"/>
        <pattern-item n="ne"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="not"/>
              </get-case-from>
              <lit-tag v="adv"/>
            </lu>
            <b pos="1"/>
            <lu>
               <lit v="to"/>
               <lit-tag v="pr"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: не prn_clitic v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="do"/>
              </get-case-from>
              <lit-tag v="vblex.pres"/>
              <clip pos="3" side="tl" part="pers"/>
              <clip pos="3" side="tl" part="nbr"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: не треба adv да v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="treba"/>
        <pattern-item n="adv"/>
        <pattern-item n="inf"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adv"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>



    <rule comment="REGLA: не треба adv да prn_clitic v_pres">
      <pattern>
        <pattern-item n="ne"/>
        <pattern-item n="treba"/>
        <pattern-item n="adv"/>
        <pattern-item n="inf"/>
        <pattern-item n="prn_clitic"/>
        <pattern-item n="v_pres"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <get-case-from pos="1">
                <lit v="should"/>
              </get-case-from>
              <lit-tag v="vaux.inf"/>
            </lu>
            <b pos="1"/>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_adv"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
            <b pos="2"/>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_adv"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
            <b pos="3"/>
            <lu>
              <clip pos="6" side="tl" part="lemh"/>
              <clip pos="6" side="tl" part="a_verb"/>
              <lit-tag v="inf"/>
              <clip pos="6" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- preposition rules -->
	
	<!-- CLITIC RULES -->

	<rule comment="REGLA: prn_ref_pers">
      <pattern>
        <pattern-item n="prn_ref_pers"/>
      </pattern>
      <action> 
      </action>
    </rule>
	

	<!-- VERB PATTERNS -->

	<!--  
		
		покажав -> showed		

		покажувам - (I) am showing
		покажував - (I) was showing

		сум покажувал - (I) have been showning (x)
		бев покажувал - (I) had been showing (x)

		имам покажувано (I) have been showning
		имав покажувано (I) had been showing
		
		сум покажал -> have shown (x)
		бев покажал -> had shown (x)

		имам покажано -> have shown (x)
		имав покажано -> had shown (x)
		
		сум видел -> have seen (x)
		бев видел -> had seen (x)

		ја имам покажано -> have shown her
		ја имам покажувано -> have been showing her

		сум го покажал -> have shown him
		сум го покажувал -> have been showing him

		го бев покажал -> had shown him
		го бев покажувал -> had been showing him

		
	-->
	
	<!-- покажав - showed -->


	 <rule comment="REGLA: vbhaver">
      <pattern>
        <pattern-item n="vbhaver"/>
      </pattern>
      <action>
        <call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<rule comment="REGLA: v_perf_fin">
      <pattern>
        <pattern-item n="v_perf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
              <clip pos="1" side="tl" part="temps"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- покажував - was showing -->

	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="v_imperf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_ser_pn1"/>
		
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vbser"/>
			  <clip pos="1" side="tl" part="temps"/>
  			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
            </lu>
			<b/>
			<lu>
              <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- ја покажав -> showed her -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_perf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	
	<!-- ја покажував - was showing her -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_imperf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<call-macro n="conv_ser_pn1"/>
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vbser"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
            </lu>
			<b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>


	<!-- и покажав -> showed her -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="v_perf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	
	<!-- и покажував - was showing her -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="v_imperf_fin"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<call-macro n="conv_ser_pn1"/>
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vbser"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
            </lu>
			<b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- ја покажав куќата -> showed the house -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor nom">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_perf_fin"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<call-macro n="np_set_defnes1">
          <with-param pos="3"/>
        </call-macro>         
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="3"/>
        </call-macro>
      </action>
    </rule>

	<!-- ја посети БиХ -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor abbr">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_perf_fin"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		         
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
              <clip pos="2" side="tl" part="temps"/>
              <clip pos="2" side="tl" part="pers"/>
              <clip pos="2" side="tl" part="nbr"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	
	<!-- ја покажував куќата - was showing the house -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_imperf_fin"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="np_set_defnes1">
          <with-param pos="3"/>
        </call-macro>
		<call-macro n="conv_ser_pn1"/> 
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vbser"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
            </lu>
			<b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			</chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="3" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_nom"/>
              <clip pos="3" side="tl" part="nbr"/>
              <clip pos="3" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="3"/>
        </call-macro>
      </action>
    </rule>

	<!-- ја покажував БиХ - was showing БиХ -->
	<rule comment="REGLA: prn_pers_clt v_perf_aor">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="v_imperf_fin"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="np_set_defnes1">
          <with-param pos="3"/>
        </call-macro>
		<call-macro n="conv_ser_pn1"/> 
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vbser"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <var n="cur_v_person"/>
			  <var n="cur_v_number"/>
            </lu>
			<b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
			</chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="3"/>
        </call-macro>
      </action>
    </rule>

	<!-- сум покажал -> I have shown -->
	<rule comment="REGLA: vbser v_perf_lp_aor">
      <pattern>
        <pattern-item n="vbser"/>
        <pattern-item n="v_perf_lp_aor"/>
      </pattern>
      <action>		
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>   
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	
	<!-- сум покажувал -> I have been showing -->
	<rule comment="REGLA: vbser v_imperf_lp_aor">
      <pattern>
        <pattern-item n="vbser"/>
        <pattern-item n="v_imperf_lp_aor"/>
      </pattern>
      <action>		
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>   
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
			<b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	

	<!-- имам покажано -> have shown 
		 имав покажано -> had shown -->
	<rule comment="REGLA: vbhaver v_pp">
      <pattern>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_perf_pp"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>   
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
		
	<!-- имам покажувано -> have been shown 
		 имав покажувано -> had been shown -->
	<rule comment="REGLA: vbhaver v_imperf_lp_aor">
      <pattern>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_imperf_pp"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>   
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="2" side="tl" part="lemh"/>
              <clip pos="2" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="2" side="tl" part="lemq"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
		

	<!-- ја имам покажано -> have shown her
		 ја имав покажано -> had shown her -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_perf_pp"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	
	<!-- ја имам покажано куќата-> have shown the house
		 ја имав покажано куќата -> had shown the house -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp nom">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_perf_pp"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="np_set_defnes1">
        <with-param pos="4"/>
      </call-macro> 
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
        <call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>

	<!-- ја имам покажано Бих-> have shown Бих
		 ја имав покажано Бих -> had shown Бих -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp nom">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_perf_pp"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
      </call-macro> 
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


	<!-- ја имам покажувано -> have been showing her
		 ја имав покажувано -> had been showing her -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_imperf_pp"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
   
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
	
	
	<!-- ја имам покажувано куќата -> have been showing the house
		 ја имав покажувано куќата -> had been showing the house -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp nom">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_imperf_pp"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
   
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
		  </chunk>
		  <b/>	
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
		<call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>

		<!-- 
		 ја имам покажувано БиХ -> have been showing БиХ
		 ја имав покажувано БиХ -> had been showing БиХ -->
	<rule comment="REGLA: prn_pers_clt vbhaver v_pp nom">
      <pattern>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vbhaver"/>
        <pattern-item n="v_imperf_pp"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
   
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="2" side="tl" part="temps"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
		  </chunk>
		  <b/>	
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- сум ја покажал -> have shown her -->
	<rule comment="REGLA: vbser_pres prn_clt v_lp_aor">
      <pattern>
        <pattern-item n="vbser_pres"/>
        <pattern-item n="prn_clt"/>
        <pattern-item n="v_perf_lp_aor"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="2"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="gen"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>
		
	
	<!-- сум ја покажал куќата -> have shown the house -->
	<rule comment="REGLA: vbser_pres prn_clt v_lp_aor">
      <pattern>
        <pattern-item n="vbser_pres"/>
        <pattern-item n="prn_clt"/>
        <pattern-item n="v_perf_lp_aor"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>	
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
		<call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>

	
	<!-- сум ја покажал БиХ -> have shown БиХ -->
	<rule comment="REGLA: vbser_pres prn_clt v_lp_aor">
      <pattern>
        <pattern-item n="vbser_pres"/>
        <pattern-item n="prn_clt"/>
        <pattern-item n="v_perf_lp_aor"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>	
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


	<!-- сум го покажувал -> have been showing him -->
	<rule comment="REGLA: vbser_pres prn_clt v_lp_aor">
      <pattern>
        <pattern-item n="vbser_pres"/>
        <pattern-item n="prn_clt"/>
        <pattern-item n="v_imperf_lp_aor"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <clip pos="1" side="tl" part="temps"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
		<call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>

	<!-- го бев покажал -> had shown him -->
	<rule comment="REGLA: prn_clt vbser_past v_lp_aor">
      <pattern>
        <pattern-item n="prn_clt"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="v_perf_lp_aor"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <lit-tag v="past"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- ги бев покажал куќите -> had shown the houses -->
	<rule comment="REGLA: prn_clt vbser_past v_lp_aor">
      <pattern>
        <pattern-item n="prn_clt"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="v_perf_lp_aor"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro> 
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <lit-tag v="past"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="pp"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
		<call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>
	
	<!-- го бев покажувал -> had been showing him -->
	<rule comment="REGLA: prn_clt vbser_past v_lp_aor">
      <pattern>
        <pattern-item n="prn_clt"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="v_imperf_lp_aor"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <lit-tag v="past"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- ја бев покажувал куќата -> had been showing the house  -->
	<rule comment="REGLA: prn_clt vbser_past v_lp_aor nom">
      <pattern>
        <pattern-item n="prn_clt"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="v_imperf_lp_aor"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>       
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <lit-tag v="past"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
            <lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
              <var n="np_chunk_q"/>
            </lu>
          </chunk>
        </out>
		<call-macro n="np_cleanup1">
          <with-param pos="4"/>
        </call-macro>
      </action>
    </rule>

		<!-- ја бев покажувал БиХ -> had been showing БиХ  -->
	<rule comment="REGLA: prn_clt vbser_past v_lp_aor nom">
      <pattern>
        <pattern-item n="prn_clt"/>
        <pattern-item n="vbser_past"/>
        <pattern-item n="v_imperf_lp_aor"/>
        <pattern-item n="abbr"/>
      </pattern>
      <action>
		<call-macro n="conv_ser_to_haver1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>      		
		
		<out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <lit v="have"/>
			  <lit-tag v="vbhaver"/>
			  <lit-tag v="past"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
		    <b/>
			<lu>
			  <lit v="be"/>
			  <lit-tag v="vblex"/>
			  <lit-tag v="pp"/>
            </lu>
			<b/>
			<lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <lit-tag v="ger"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
		  </chunk>
		  <b/>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
            </tags>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_abbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


	<!-- ми	jа 	покажа
		 me her showed / showed her to me -->
	<rule comment="REGLA: prn_pos_clt prn_pers_clt vblex">
      <pattern>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vblex"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="2"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <clip pos="3" side="tl" part="temps"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="gen"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
			<b/>
			<lu>
              <lit v="to"/>
			  <lit-tag v="pr"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="sl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="sl" part="nbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>

	<!-- тој ми	jа 	покажа
		 he  me her showed / he showed her to me -->
	<rule comment="REGLA: prn_pos_clt prn_pers_clt vblex">
      <pattern>
		<pattern-item n="prn_pers"/>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vblex"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="4"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
		    <b/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
			  <clip pos="4" side="tl" part="temps"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="3" side="tl" part="pers"/>
			  <clip pos="3" side="tl" part="gen"/>
			  <clip pos="3" side="tl" part="nbr"/>
            </lu>
			<b/>
			<lu>
              <lit v="to"/>
			  <lit-tag v="pr"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="gen"/>
			  <clip pos="2" side="tl" part="nbr"/>
            </lu>
          </chunk>
        </out>
      </action>
    </rule>


	<!-- ми	jа 	покажа куќата
		 me her showed house / showed the house to me -->
	<rule comment="REGLA: prn_pos_clt prn_pers_clt vblex">
      <pattern>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vblex"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="3"/>
        </call-macro>
		<call-macro n="np_set_defnes1">
          <with-param pos="4"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
            <lu>
              <clip pos="3" side="tl" part="lemh"/>
              <clip pos="3" side="tl" part="a_verb"/>
			  <clip pos="3" side="tl" part="temps"/>
              <clip pos="3" side="tl" part="lemq"/>
            </lu>
			<b/>
          </chunk>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="4" side="tl" part="nbr"/></tag>
            </tags>
			<b/>
			<lu>
              <var n="np_chunk_h"/>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_nom"/>
              <clip pos="4" side="tl" part="nbr"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="to"/>
			  <lit-tag v="pr"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="1" side="tl" part="pers"/>
			  <clip pos="1" side="tl" part="gen"/>
			  <clip pos="1" side="tl" part="nbr"/>
              <var n="np_chunk_q"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>

	<!-- тој ми	jа 	покажа куќата
		 he  me her showed house / he showed the house to me -->
	<rule comment="REGLA: prn_pos_clt prn_pers_clt vblex">
      <pattern>
		<pattern-item n="prn_pers"/>
        <pattern-item n="prn_pos_clt"/>
        <pattern-item n="prn_pers_clt"/>
        <pattern-item n="vblex"/>
        <pattern-item n="nom"/>
      </pattern>
      <action>
		<call-macro n="conv_verb_tense1">
          <with-param pos="4"/>
        </call-macro>
		<call-macro n="prn_conv1">
          <with-param pos="1"/>
        </call-macro>
		<call-macro n="np_set_defnes1">
          <with-param pos="5"/>
        </call-macro>
        <out>
          <chunk name="v" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SV"/></tag>
            </tags>
			<lu>
			  <clip pos="1" side="tl" part="lemh"/>
              <clip pos="1" side="tl" part="a_prn"/>
              <clip pos="1" side="tl" part="pers"/>
              <clip pos="1" side="tl" part="gen"/>
              <clip pos="1" side="tl" part="nbr"/>
              <clip pos="1" side="tl" part="lemq"/>
            </lu>
		    <b/>
            <lu>
              <clip pos="4" side="tl" part="lemh"/>
              <clip pos="4" side="tl" part="a_verb"/>
			  <clip pos="4" side="tl" part="temps"/>
              <clip pos="4" side="tl" part="lemq"/>
            </lu>
			<b/>
          </chunk>
		  <chunk namefrom="np_chunk_n" case="caseFirstWord">
            <tags>
              <tag><lit-tag v="SN"/></tag>
              <tag><var n="np_chunk_s"/></tag>
              <tag><var n="defin"/></tag>
              <tag><clip pos="5" side="tl" part="nbr"/></tag>
            </tags>
			<b/>
			<lu>
              <var n="np_chunk_h"/>
              <clip pos="5" side="tl" part="lemh"/>
              <clip pos="5" side="tl" part="a_nom"/>
              <clip pos="5" side="tl" part="nbr"/>
              <clip pos="5" side="tl" part="lemq"/>
            </lu>
			<b/>
			<lu>
              <lit v="to"/>
			  <lit-tag v="pr"/>
            </lu>
			<b/>
			<lu>
              <lit v="prpers"/>
			  <lit-tag v="prn"/>
			  <lit-tag v="obj"/>
			  <clip pos="2" side="tl" part="pers"/>
			  <clip pos="2" side="tl" part="gen"/>
			  <clip pos="2" side="tl" part="nbr"/>
              <var n="np_chunk_q"/>
            </lu>
		  </chunk>
        </out>
      </action>
    </rule>


  </section-rules>
</transfer>
